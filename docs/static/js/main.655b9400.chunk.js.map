{"version":3,"sources":["types/types.js","fireBase/firebaseConfig.js","actions/ui.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","actions/auth.js","hooks/useForm.jsx","components/auth/LoginScreen.jsx","components/auth/RegisterScreen.jsx","routers/AuthRouter.jsx","components/notes/NotesAppBar.jsx","components/notes/NoteScreen.jsx","components/journal/NothigSelected.jsx","components/journal/JournalEntry.jsx","components/journal/JournalEntries.jsx","components/journal/Sidebar.jsx","components/journal/JournalScreen.jsx","routers/PrivateRoute.jsx","routers/PublicRoutes.jsx","routers/AppRouter.jsx","reducers/uiReducers.js","reducers/notesReducers.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["types","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","setError","err","type","payload","finishLoading","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","console","log","loadNotes","uid","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","addNewNote","note","activeNote","clientId","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","message","logout","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","LoginScreen","useSelector","state","ui","loading","msgError","useDispatch","formValues","className","onSubmit","e","preventDefault","validator","isEmail","length","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","confirmPassword","isFormValid","trim","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","NotesAppBar","date","moment","Date","active","format","style","display","files","text","allowOutsideClick","didOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","cols","rows","delete","NothigSelected","JournalEntry","noteDate","backgroundSize","backgroundImage","JournalEntries","map","Sidebar","signOut","newNote","getTime","add","docRef","JournalScreen","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","initalState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.655b9400.chunk.js","sourcesContent":["export const types = {\r\n  login: \"[Auth] Login\",\r\n  logout: \"[Auth] Logout\",\r\n  //types para uiReduders\r\n  uiSetError: \"[UI] SetError\",\r\n  uiRemoveError: \"[UI] RemoveError\",\r\n  //types para login\r\n  uiStartLoading: \"[UI] Start loading\",\r\n  uiFinishLoading: \"[UI] Finish loading\",\r\n\r\n  notesAddNew: \"[Notes] New note\",\r\n  notesActive: \"[Notes] Set active  note\",\r\n  notesLoad: \"[Notes] Load  notes\",\r\n  notesUpdated: \"[Notes] Update note\",\r\n  notesFileUrl: \"[Notes] New note\",\r\n  notesDelete: \"[Notes] Delete note\",\r\n  notesLogoutCleaning: \"[Notes] Logout Cleaning\",\r\n};\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBqN4tsAQrhYCD_5usi5LCG0g88hf8ejAE\",\r\n  authDomain: \"ract-app-journal.firebaseapp.com\",\r\n  projectId: \"ract-app-journal\",\r\n  storageBucket: \"ract-app-journal.appspot.com\",\r\n  messagingSenderId: \"117433350030\",\r\n  appId: \"1:117433350030:web:6e2583978b721b5f6256df\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { db, googleAuthProvider, firebase };\r\n","import { types } from \"../types/types\";\r\n\r\nexport const setError = (err) => ({\r\n  type: types.uiSetError,\r\n  payload: err,\r\n});\r\n\r\nexport const removeError = () => ({\r\n  type: types.uiRemoveError,\r\n});\r\nexport const startLoading = () => ({\r\n  type: types.uiStartLoading,\r\n});\r\n\r\nexport const finishLoading = () => ({\r\n  type: types.uiFinishLoading,\r\n});\r\n","export const fileUpload = async (file) => {\r\n  const cloudUrl = \"https://api.cloudinary.com/v1_1/de6cygu00/upload\";\r\n  const formData = new FormData();\r\n  formData.append(\"upload_preset\", \"react-Journal\");\r\n  formData.append(\"file\", file);\r\n  try {\r\n    const resp = await fetch(cloudUrl, {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n    if (resp.ok) {\r\n      const cloudResp = await resp.json();\r\n      return cloudResp.secure_url;\r\n    } else {\r\n      throw await resp.json();\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import { db } from \"../fireBase/firebaseConfig\";\r\n\r\nexport const loadNotes = async (uid) => {\r\n  const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n  const notes = [];\r\n  notesSnap.forEach((snapHijo) =>\r\n    notes.push({ id: snapHijo.id, ...snapHijo.data() })\r\n  );\r\n\r\n  return notes;\r\n};\r\n","import Swal from \"sweetalert2\";\r\nimport { db } from \"../fireBase/firebaseConfig\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startNewNote = () => {\r\n  //getState obtiene el state\r\n  return async (dispatch, getState) => {\r\n    const uid = getState().auth.uid;\r\n    const newNote = {\r\n      title: \"\",\r\n      body: \"\",\r\n      date: new Date().getTime(),\r\n    };\r\n    const docRef = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n    dispatch(activeNote(docRef.id, newNote));\r\n    dispatch(addNewNote(docRef.id, newNote));\r\n  };\r\n};\r\nexport const addNewNote = (id, note) => ({\r\n  type: types.notesAddNew,\r\n  payload: {\r\n    id,\r\n    ...note,\r\n  },\r\n});\r\nexport const activeNote = (clientId, note) => ({\r\n  type: types.notesActive,\r\n  payload: {\r\n    id: clientId,\r\n    ...note,\r\n  },\r\n});\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n  return async (dispatch) => {\r\n    const notes = await loadNotes(uid);\r\n    dispatch(setNotes(notes));\r\n  };\r\n};\r\nexport const setNotes = (notes) => ({\r\n  type: types.notesLoad,\r\n  payload: notes,\r\n});\r\n\r\nexport const startSaveNote = (note) => {\r\n  return async (dispatch, getState) => {\r\n    const { uid } = getState().auth;\r\n    if (!note.url) {\r\n      delete note.url;\r\n    }\r\n    const noteToFirestore = { ...note };\r\n    delete noteToFirestore.id;\r\n    await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\r\n    dispatch(refreshNote(note.id, noteToFirestore));\r\n    Swal.fire(\"Saved\", note.title, \"success\");\r\n  };\r\n};\r\n\r\nexport const refreshNote = (id, note) => {\r\n  console.log(note);\r\n  return {\r\n    type: types.notesUpdated,\r\n    payload: {\r\n      id,\r\n      note: {\r\n        id,\r\n        ...note,\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nexport const startUploading = (file) => {\r\n  return async (dispatch, getState) => {\r\n    const { active: activeNote } = getState().notes;\r\n    Swal.fire({\r\n      title: \"Uploading...\",\r\n      text: \"Please Wait\",\r\n      allowOutsideClick: false,\r\n      didOpen: () => {\r\n        Swal.showLoading();\r\n      },\r\n    });\r\n    const fileUrl = await fileUpload(file);\r\n    activeNote.url = fileUrl;\r\n    dispatch(startSaveNote(activeNote));\r\n    Swal.close();\r\n  };\r\n};\r\n\r\nexport const startDelete = (id) => {\r\n  return async (dispatch, getState) => {\r\n    const uid = getState().auth.uid;\r\n    await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n    dispatch(deleteNote(id));\r\n  };\r\n};\r\n\r\nexport const deleteNote = (id) => ({\r\n  type: types.notesDelete,\r\n  payload: id,\r\n});\r\n\r\nexport const noteLogOut = () => ({\r\n  type: types.notesLogoutCleaning,\r\n});\r\n","import Swal from \"sweetalert2\";\r\nimport { types } from \"../types/types\";\r\nimport { firebase, googleAuthProvider } from \"../fireBase/firebaseConfig\";\r\nimport { finishLoading, startLoading } from \"./ui\";\r\nimport { noteLogOut } from \"./notes\";\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n  return (dispatch) => {\r\n    dispatch(startLoading());\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(async ({ user }) => {\r\n        dispatch(await login(user.uid, user.displayName));\r\n      })\r\n      .then(dispatch(finishLoading()))\r\n      .catch((err) => {\r\n        dispatch(finishLoading());\r\n        Swal.fire(\"Fail\", err.message, \"error\");\r\n      });\r\n  };\r\n};\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n  return (dispatch) => {\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(async ({ user }) => {\r\n        await user.updateProfile({ displayName: name });\r\n        dispatch(login(user.uid, user.displayName));\r\n      })\r\n      .catch((err) => {\r\n        Swal.fire(\"Fail\", err.message, \"error\");\r\n      });\r\n  };\r\n};\r\n\r\nexport const startGoogleLogin = () => {\r\n  return (dispatch) => {\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(googleAuthProvider)\r\n      .then(({ user }) => {\r\n        dispatch(login(user.uid, user.displayName));\r\n      });\r\n  };\r\n};\r\nexport const login = (uid, displayName) => ({\r\n  type: types.login,\r\n  payload: {\r\n    uid,\r\n    displayName,\r\n  },\r\n});\r\n\r\nexport const startLogout = () => {\r\n  return async (dispatch) => {\r\n    await firebase.auth().signOut();\r\n    dispatch(noteLogOut());\r\n    dispatch(logout());\r\n  };\r\n};\r\n\r\nexport const logout = () => ({ type: types.logout });\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n  const reset = (newFormState = initialState) => {\r\n    setValues(newFormState);\r\n  };\r\n  const handleInputChange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  return [values, handleInputChange, reset];\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startGoogleLogin, startLoginEmailPassword } from \"../../actions/auth\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport validator from \"validator\";\r\nimport { setError } from \"../../actions/ui\";\r\nconst LoginScreen = () => {\r\n  const { loading, msgError } = useSelector((state) => state.ui);\r\n  // const {  } = useSelector((state) => state.ui);\r\n  const dispatch = useDispatch();\r\n  const [formValues, handleInputChange] = useForm({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { email, password } = formValues;\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    if (!validator.isEmail(email)) {\r\n      dispatch(setError(\"Valide correo\"));\r\n      return false;\r\n    } else if (password.length < 5) {\r\n      dispatch(setError(\"Valide su clave\"));\r\n      return false;\r\n    }\r\n    dispatch(startLoginEmailPassword(email, password));\r\n  };\r\n  const handleGoogleLogin = (e) => {\r\n    dispatch(startGoogleLogin());\r\n  };\r\n  return (\r\n    <>\r\n      <h3 className=\"auth__title\">Login</h3>\r\n      {msgError && <div className=\"auth__alert-error\">{msgError}</div>}\r\n\r\n      <form onSubmit={handleLogin}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          name=\"email\"\r\n          className=\"auth__input\"\r\n          autoComplete=\"off\"\r\n          value={email}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          className=\"auth__input\"\r\n          value={password}\r\n          onChange={handleInputChange}\r\n        />\r\n        <button\r\n          disabled={loading}\r\n          className=\"btn btn-block  btn-primary\"\r\n          type=\"submit\"\r\n        >\r\n          Login\r\n        </button>\r\n\r\n        <div className=\"auth__social-networks\">\r\n          <p>Login with social networks</p>\r\n          <div className=\"google-btn\" onClick={handleGoogleLogin}>\r\n            <div className=\"google-icon-wrapper\">\r\n              <img\r\n                className=\"google-icon\"\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\r\n                alt=\"google button\"\r\n              />\r\n            </div>\r\n            <p className=\"btn-text\">\r\n              <b>Sign in with google</b>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <Link className=\"link\" to=\"/auth/register\">\r\n          Create new account\r\n        </Link>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setError } from \"../../actions/ui\";\r\nimport { startRegisterWithEmailPasswordName } from \"../../actions/auth\";\r\nimport validator from \"validator\";\r\n\r\nconst RegisterScreen = () => {\r\n  const dispatch = useDispatch();\r\n  //Retorna el estado y se puede extraer con parcialmente con useSelector\r\n  const { msgError } = useSelector((state) => state.ui);\r\n\r\n  const [formValues, handleInputChange] = useForm({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const { name, email, password, confirmPassword } = formValues;\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n    if (isFormValid()) {\r\n      dispatch(startRegisterWithEmailPasswordName(email, password, name));\r\n    }\r\n  };\r\n  const isFormValid = () => {\r\n    //se instala npm validator para validaci[on de campos del formulario ]\r\n    if (name.trim().length < 5) {\r\n      dispatch(setError(\"Name Required\"));\r\n      return false;\r\n    } else if (!validator.isEmail(email)) {\r\n      dispatch(setError(\"is not a Email \"));\r\n      return false;\r\n    } else if (password !== confirmPassword || password.length < 5) {\r\n      dispatch(\r\n        setError(\r\n          \"Password should be at least 6 characters and match each other\"\r\n        )\r\n      );\r\n\r\n      return false;\r\n    }\r\n    //dispatch(removeError());\r\n    return true;\r\n  };\r\n  return (\r\n    <>\r\n      <h3 className=\"auth__title\">Register</h3>\r\n\r\n      <form onSubmit={handleRegister}>\r\n        {msgError && <div className=\"auth__alert-error\">{msgError}</div>}\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Name\"\r\n          name=\"name\"\r\n          className=\"auth__input\"\r\n          autoComplete=\"off\"\r\n          onChange={handleInputChange}\r\n          value={name}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          name=\"email\"\r\n          className=\"auth__input\"\r\n          autoComplete=\"off\"\r\n          onChange={handleInputChange}\r\n          value={email}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          className=\"auth__input\"\r\n          onChange={handleInputChange}\r\n          value={password}\r\n          autoComplete=\"off\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"confirmPassword\"\r\n          placeholder=\"Confirm password\"\r\n          className=\"auth__input\"\r\n          onChange={handleInputChange}\r\n          value={confirmPassword}\r\n          autoComplete=\"off\"\r\n        />\r\n        <button className=\"btn mb-5 btn-block  btn-primary\" type=\"submit\">\r\n          Register\r\n        </button>\r\n\r\n        <Link className=\"link \" to=\"/auth/login\">\r\n          Alredy registered?\r\n        </Link>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport LoginScreen from \"../components/auth/LoginScreen\";\r\nimport RegisterScreen from \"../components/auth/RegisterScreen\";\r\n\r\nconst AuthRouter = () => {\r\n  return (\r\n    <div className=\"auth__main\">\r\n      <div className=\"auth__box-container\">\r\n        <Switch>\r\n          <Route exact path=\"/auth/login\" component={LoginScreen} />\r\n          <Route exact path=\"/auth/register\" component={RegisterScreen} />\r\n          <Redirect to=\"/auth/login\" />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthRouter;\r\n","import moment from \"moment\";\r\nimport React from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startSaveNote, startUploading } from \"../../actions/notes\";\r\n\r\nconst NotesAppBar = () => {\r\n  const dispatch = useDispatch();\r\n  const date = moment(new Date());\r\n  const { active } = useSelector((state) => state.notes);\r\n  const handleSaveNote = () => {\r\n    dispatch(startSaveNote(active));\r\n  };\r\n  const handlePictureUpload = () => {\r\n    console.log(\"botn imagen\");\r\n    document.querySelector(\"#fileSelector\").click();\r\n  };\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      dispatch(startUploading(file));\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"notes__appbar\">\r\n      <span>{date.format(\"MMM Do YY\")}</span>\r\n      <input\r\n        id=\"fileSelector\"\r\n        type=\"file\"\r\n        name=\"file\"\r\n        style={{ display: \"none\" }}\r\n        onChange={handleFileChange}\r\n      />\r\n      <div>\r\n        <button className=\"btn\" onClick={handlePictureUpload}>\r\n          Picture\r\n        </button>\r\n        <button onClick={handleSaveNote} className=\"btn\">\r\n          Save\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotesAppBar;\r\n","import React from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { activeNote, startDelete } from \"../../actions/notes\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport NotesAppBar from \"./NotesAppBar\";\r\n\r\nexport const NoteScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const { active: note } = useSelector((state) => state.notes);\r\n  const [formValues, handleInputChange, reset] = useForm(note);\r\n  const activeId = useRef(note.id);\r\n  // const activeUrl = useRef(note.url);\r\n  const { body, title } = formValues;\r\n  useEffect(() => {\r\n    if (note.id !== activeId.current) {\r\n      reset(note);\r\n      activeId.current = note.id;\r\n    }\r\n    /*if (note.url !== activeUrl) {\r\n      reset(note);\r\n      activeUrl.current = note.url;\r\n    }*/\r\n  }, [note, reset]);\r\n\r\n  useEffect(() => {\r\n    dispatch(activeNote(formValues.id, { ...formValues }));\r\n  }, [dispatch, formValues]);\r\n\r\n  const handleDelete = () => {\r\n    dispatch(startDelete(note.id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"notes__main-content\">\r\n      <NotesAppBar />\r\n      <div className=\"notes__content\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Title\"\r\n          className=\"notes__title-input\"\r\n          autoComplete=\"off\"\r\n          onChange={handleInputChange}\r\n          value={title}\r\n          name=\"title\"\r\n        />\r\n        <textarea\r\n          className=\"notes-textarea\"\r\n          placeholder=\"Qué hay para tu día?\"\r\n          cols=\"30\"\r\n          rows=\"10\"\r\n          onChange={handleInputChange}\r\n          value={body}\r\n          name=\"body\"\r\n        ></textarea>\r\n        {note.url && (\r\n          <div className=\"notes__images\">\r\n            <img src={note.url} alt=\"paisaje\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <button onClick={handleDelete} className=\"btn btn-danger\">\r\n        Borrar\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nconst NothigSelected = () => {\r\n  return (\r\n    <div className=\"nothing__main-content\">\r\n      <p>\r\n        Select Something\r\n        <br />\r\n        or create an entry\r\n      </p>\r\n      <i className=\"far fa-star fa-4x mt-5\"></i>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NothigSelected;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { activeNote } from \"../../actions/notes\";\r\nimport { useDispatch } from \"react-redux\";\r\nconst JournalEntry = ({ id, date, body, title, url }) => {\r\n  const noteDate = moment(date);\r\n  const dispatch = useDispatch();\r\n  const handleEditNote = () => {\r\n    dispatch(\r\n      activeNote(id, {\r\n        date,\r\n        body,\r\n        title,\r\n        url,\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"journal__entry pointer\" onClick={handleEditNote}>\r\n      {url && (\r\n        <div\r\n          className=\"journal__entry-picture\"\r\n          style={{\r\n            backgroundSize: \"cover\",\r\n            backgroundImage: `url(${url})`,\r\n          }}\r\n        ></div>\r\n      )}\r\n      <div className=\"journal__entry-body\">\r\n        <p className=\"journal__entry-title\"> {title}</p>\r\n        <p className=\"journal__entry-content\">{body}</p>\r\n      </div>\r\n      <div className=\"journal__entry-date-box\">\r\n        <span>{noteDate.format(\"dddd\")}</span>\r\n        <h4>{noteDate.format(\"Do\")}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JournalEntry;\r\n","import React from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport JournalEntry from \"./JournalEntry\";\r\n\r\nconst JournalEntries = () => {\r\n  const { notes } = useSelector((state) => state.notes);\r\n\r\n  return (\r\n    <div\r\n      className=\"\r\n      journal__entries\"\r\n    >\r\n      {notes.map((note) => (\r\n        <JournalEntry key={note.id} {...note} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JournalEntries;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startLogout } from \"../../actions/auth\";\r\nimport { startNewNote } from \"../../actions/notes\";\r\nimport JournalEntries from \"./JournalEntries\";\r\n\r\nconst Sidebar = () => {\r\n  const { name } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const handleLogout = () => {\r\n    dispatch(startLogout());\r\n  };\r\n  const handleAddnew = () => {\r\n    dispatch(startNewNote());\r\n  };\r\n  return (\r\n    <aside className=\"journal__sidebar\">\r\n      <div className=\"journal__sidebar-navbar\">\r\n        <h3 className=\"mt-5\">\r\n          <i className=\"far fa-moon\" />\r\n          <span className=\"\"> {name}</span>\r\n        </h3>\r\n        <button onClick={handleLogout} className=\"btn\">\r\n          Logout\r\n        </button>\r\n      </div>\r\n      <div onClick={handleAddnew} className=\"journal__new-entry\">\r\n        <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n        <p className=\"mt-5\">New Entry</p>\r\n      </div>\r\n      <JournalEntries />\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NoteScreen } from \"../notes/NoteScreen\";\r\nimport NothigSelected from \"./NothigSelected\";\r\n\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nconst JournalScreen = () => {\r\n  const { active } = useSelector((state) => state.notes);\r\n  return (\r\n    <div className=\"journal__main-content\">\r\n      <Sidebar />\r\n      <main>{active ? <NoteScreen /> : <NothigSelected />}</main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JournalScreen;\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isAuthenticated ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/auth/login\" />\r\n        )\r\n      }\r\n    ></Route>\r\n  );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\nexport default PrivateRoute;\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PublicRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isAuthenticated ? <Redirect to=\"/\" /> : <Component {...props} />\r\n      }\r\n    ></Route>\r\n  );\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\nexport default PublicRoute;\r\n","import React from \"react\";\r\nimport AuthRouter from \"./AuthRouter\";\r\nimport { firebase } from \"../fireBase/firebaseConfig\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\r\nimport { login } from \"../actions/auth\";\r\nimport JournalScreen from \"../components/journal/JournalScreen\";\r\n\r\nimport { useState } from \"react\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport PublicRoute from \"./PublicRoutes\";\r\nimport { startLoadingNotes } from \"../actions/notes\";\r\n\r\nconst AppRouter = () => {\r\n  const [checking, setChecking] = useState(true);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged(async (user) => {\r\n      if (user?.uid) {\r\n        dispatch(login(user.uid, user.displayName));\r\n        setIsLoggedIn(true);\r\n        dispatch(startLoadingNotes(user.uid));\r\n      } else {\r\n        setIsLoggedIn(false);\r\n      }\r\n      setChecking(false);\r\n    });\r\n  }, [dispatch, setChecking, setIsLoggedIn]);\r\n  if (checking) {\r\n    return <h1>Ingresando</h1>;\r\n  }\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <PrivateRoute\r\n            exact\r\n            isAuthenticated={isLoggedIn}\r\n            path=\"/\"\r\n            component={JournalScreen}\r\n          />\r\n\r\n          <PublicRoute\r\n            to=\"/auth/login\"\r\n            component={AuthRouter}\r\n            isAuthenticated={isLoggedIn}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { types } from \"../types/types\";\r\n\r\nconst initalState = {\r\n  loading: false,\r\n  msgError: null,\r\n};\r\n\r\nexport const uiReducer = (state = initalState, action) => {\r\n  switch (action.type) {\r\n    case types.uiSetError:\r\n      return {\r\n        ...state,\r\n        msgError: action.payload,\r\n      };\r\n    case types.uiRemoveError:\r\n      return {\r\n        ...state,\r\n        msgError: null,\r\n      };\r\n    case types.uiStartLoading:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case types.uiFinishLoading:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","/**\r\n * como quier que trabaje la aplicación\r\n * / */\r\n\r\nimport { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  notes: [],\r\n  active: null,\r\n};\r\nexport const notesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.notesActive:\r\n      return {\r\n        ...state,\r\n        active: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n    case types.notesAddNew:\r\n      return {\r\n        ...state,\r\n        notes: [action.payload, ...state.notes],\r\n      };\r\n    case types.notesLoad:\r\n      return {\r\n        ...state,\r\n        notes: [...action.payload],\r\n      };\r\n    case types.notesUpdated:\r\n      return {\r\n        ...state,\r\n        notes: state.notes.map((note) =>\r\n          note.id === action.payload.id ? action.payload.note : note\r\n        ),\r\n      };\r\n    case types.notesDelete:\r\n      return {\r\n        ...state,\r\n        active: null,\r\n        notes: state.notes.filter((note) => note.id !== action.payload),\r\n      };\r\n\r\n    case types.notesLogoutCleaning: {\r\n      return {\r\n        ...state,\r\n        active: null,\r\n        notes: [],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { uiReducer } from \"../reducers/uiReducers\";\r\nimport { notesReducer } from \"../reducers/notesReducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers =\r\n  (typeof window !== \"undefined\" &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nconst reducers = combineReducers({\r\n  auth: authReducer,\r\n  ui: uiReducer,\r\n  notes: notesReducer,\r\n});\r\n\r\nexport const store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case types.login:\r\n      return {\r\n        uid: action.payload.uid,\r\n        name: action.payload.displayName,\r\n      };\r\n    case types.logout:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport AppRouter from \"./routers/AppRouter\";\r\nimport { store } from \"./store/store\";\r\n\r\nconst JournalApp = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <AppRouter />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default JournalApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport JournalApp from \"./JournalApp\";\nimport \"./styles/styles.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <JournalApp />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}